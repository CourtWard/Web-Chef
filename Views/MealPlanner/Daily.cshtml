@model RecipeBuilder.ViewModels.MealPlannerDailyVM

@{ 
    ViewData["Title"] = "Daily Meals";
}

<!-- styling for page -->
<style>
    h1 {
        color: #4A743E;
        text-align: center;
        margin-top: 0;
        padding-top: 0; 
    }

    body {
        background-color: #ffffff; 
        color: #333; 
        margin: 0;
        padding: 0; 
    }

    .text-center {
        text-align: center; 
    }

    hr.rounded {
        border-top: 8px solid #96AE6D;
        border-radius: 5px;
        width: 80%; 
        margin: 0 auto; 
        margin-top: 10px; 
    }

    .meal-entry {
        background-color: #f9f9f9;
        border: 2px solid #96AE6D;
        border-radius: 8px;
        padding: 15px;
        margin-bottom: 15px;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        width: 500px;
        text-align: center;
    }

    #meal-list {
        display: flex;
        flex-direction: column;
        align-items: center; 
        margin-top: 20px;
    }

    .action-links {
        margin-top: 10px;
    }

    .action-links a {
        color: #4A743E;
        text-decoration: none;
        font-weight: bold;
        margin: 0 5px;
    }

    .action-links a:hover {
        color: #96AE6D;
    }

    .add-meal-btn {
        background-color: #4A743E;
        color: white;
        padding: 10px 20px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        font-size: 16px;
        margin-top: 20px;
        text-decoration: none;
    }

    .add-meal-btn:hover {
        background-color: #96AE6D;
    }

    .table-container{
        display: none;
        margin-bottom: 20px;
    }
</style>

<body>
    <div class="container">
        <h1 class="display-4">Daily Meal Planner</h1>
        <h2 style="color: #4A743E;" class="text-center">@Model.mealPlansForDay.Date.ToString("dddd M/d/yyyy")</h2>
        <hr class="rounded">
        <br>
        <div id="scheduled-meal-container">
       @*  <form asp-controller="MealPlanner" asp-action="Daily" method="post" id="form"> *@
            @if (@Model.mealPlansForDay.Meals.Count() != 0)
            {
                <!-- meal entries -->
                <div id="meal-list">
                    @foreach (MPMeal meal in Model.mealPlansForDay.Meals)
                    {
                        int mealIndex = Model.mealPlansForDay.Meals.IndexOf(meal); 
                        
                        <div class="meal-entry" id="table-container">
                           
                            <table class="table">
                                @* <thead>
                                    <tr>
                                        <th></th>
                                    </tr>
                                </thead> *@
                                    
                                    <tbody>
                                        <tr>
                                            <td> <p><strong>Meal @(@mealIndex + 1)</strong></p> </td>
                                            <td><button type="submit" class="btn btn-custom" hidden="hidden">Submit</button></td>
                                            <td><button onclick="editRow(this)" class="btn btn-custom">Edit</button></td>
                                        </tr>
                                    </tbody>
                            </table>
                            <div class="currentMeal">
                                <table id="currentMealTable">
                                    <thead>
                                        <tr>
                                            <th>Recipes</th>
                                            <th></th>
                                        </tr>
                                    </thead>
                                    @foreach (string recipeName in meal.recipeNames)
                                    {
                                        <tbody>
                                            <tr>
                                                <td class="editable"><a href="/Recipe/Look?recipeName=@recipeName">@recipeName</a></td>
                                                <form method="post" asp-controller="MealPlanner" asp-action="RemoveFromMealPlanner">
                                                    <input type="hidden" name="recipeToRemove" value="@recipeName" />
                                                    <input type="hidden" name="date" value="@Model.mealPlansForDay.Date" />
                                                    <input type="hidden" name="mealNum" value="@mealIndex" />
                                                    <td><button type="submit" class="btn btn-custom">Delete</button></td>
                                                </form>
                                            </tr>
                                        </tbody>
                                    }
                                </table>
                            </div>
                            </div>}
                            </div>
                            <br>
                            <!-- action links inside meal container -->
                            <div class="action-links">
                                <!--Meal Selector Table-->
                                <!--BELOW CODE MOVED TO MODAL-->
@*                                 <div>
                                    <label for="meals" class="meals-added-label">Meals Added:</label>
                                </div><br> *@
                               @*  @if(Model.UserMealsNames != null && Model.UserMealsNames.Any())
                                {
                                    <div class="form-group">
                                        <div id="meal-container">
                                            <table id="mealTable">
                                                <thead>
                                                    <tr>
                                                        <th>Add Meals</th>
                                                        <th></th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                @for (int i = 0; i < Model.UserMealsNames.Count; i++)
                                                {
                                                    <tr>
                                                        <td>
                                                            <select name="meal.MealNames[@i]" value="@Model.mealPlansForDay.Meals">
                                                                <option value="" disabled selected>Select a Meal</option>
                                                                @foreach(string mealName in Model.UserMealsNames)
                                                                {
                                                                    <option value="@mealName">@mealName</option>
                                                                }
                                                            </select>
                                                        </td>
                                                        <td>
                                                            <button type="button" onclick="removeMealRow(this)">Remove</button>
                                                        </td>
                                                    </tr>
                                                }
                                                </tbody>
                                            </table>
                                        </div>
                                        <div>
                                            <span class="plus-button" onclick="addMealRow()">Add Meal</span>
                                        </div><br>
                                    </div>
                                }
                                else
                                {
                                    <p>No Meals to Select</p>
                                }
                                <!--Recipe Selector Table-->
                                <div>
                                    <label for="recipes" class="recipes-added-label">Recipes Added:</label>
                                </div>
                                @if(Model.UserRecipesNames != null && Model.UserRecipesNames.Any())
                                {
                                    <div class="form-group">
                                        <div id="recipe-container">
                                            <table id="recipeTable">
                                                <thead>
                                                    <tr>
                                                        <th>Recipes</th>
                                                        <th></th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                @for (int i = 0; i < Model.UserRecipesNames.Count; i++)
                                                {
                                                    <tr>
                                                        <td>
                                                                <select name="meal.RecipeNames[@i]" value="@Model.mealPlansForDay.Meals">
                                                                <option value="" disabled selected>Select a Recipe</option>
                                                                @foreach(string recipeName in Model.UserRecipesNames)
                                                                {
                                                                    <option value="@recipeName">@recipeName</option>
                                                                }
                                                            </select>
                                                        </td>
                                                        <td>
                                                            <button type="button" onclick="removeRecipeRow(this)">Remove</button>
                                                        </td>
                                                    </tr>
                                                }
                                                </tbody>
                                            </table>
                                        </div>
                                        <div>
                                            <span class="plus-button" onclick="addRecipeRow()">Add Recipe</span>
                                        </div><br>
                                    </div>
                                }
                                else
                                {
                                    <p>No Recipes to Select</p>
                                }
                                <br><button type="submit" class="btn btn-custom">Save Scheduled Meal</button><br>
                            </div>
                        </div>*@
                    
                </div>
            }
            else
            {
                <p class="text-center">No meals scheduled for today.</p>
            }

            <!-- button to add more meals -->
            <div class="text-center">
                <button class="add-meal-btn" onclick="addMeal()">Add Another Meal</button>
            </div>
        @* </form> *@
        </div>
        <!-- javascript for adding additional meal entries -->
        <script>
            let mealCount = 0;//@Model.mealPlansForDay.Meals.Count();
            function addMeal() {
                mealCount++;
                const mealList = document.getElementById('meal-list');
                const container = document.getElementById('table-container');
                const newScheduledMeal = container.cloneNode(true);
                newScheduledMeal.id = '';
                newScheduledMeal.style.display = 'block';
                const sectionHeader = newScheduledMeal.querySelector('p strong');
                sectionHeader.textContent = 'Meal';// + mealCount;
                
                mealList.appendChild(newScheduledMeal);

                @* var mealList = document.getElementById('meal-list');
                var mealCount = mealList.getElementsByClassName('meal-entry').length + 1;

                // create a new meal entry
                var newMeal = document.createElement('div');
                newMeal.className = 'meal-entry';
                newMeal.innerHTML = `
                    <p><strong>Meal ` + mealCount + `:</strong></p>
                    <div class="action-links">
                        <a asp-controller="Meals" asp-action="Index">Add Meal</a> | 
                        <a asp-controller="Recipe" asp-action="Index">Add Recipe</a>
                    </div>
                `;

                // add new meal entry to meal list
                mealList.appendChild(newMeal); *@
            }

            function addMealRow(){
                var rowCount = document.querySelectorAll('#mealTable tbody tr').length;
                var initialDropdown = document.querySelector('#mealTable tbody tr').outerHTML;
                var newRow = document.createElement('tr');

                newRow.innerHTML = initialDropdown;

                // Update the 'name' attribute in the new row's dropdown to reflect the current index
                var selectElement = newRow.querySelector('select');
                selectElement.setAttribute('name', `meal.MealNames[${rowCount}]`);

                document.getElementById("mealTable").getElementsByTagName('tbody')[0].appendChild(newRow);
            }

            function addRecipeRow(){
                var rowCount = document.querySelectorAll('#recipeTable tbody tr').length;
                var initialDropdown = document.querySelector('#recipeTable tbody tr').outerHTML;
                var newRow = document.createElement('tr');

                newRow.innerHTML = initialDropdown;

                // Update the 'name' attribute in the new row's dropdown to reflect the current index
                var selectElement = newRow.querySelector('select');
                selectElement.setAttribute('name', `meal.RecipeNames[${rowCount}]`);

                document.getElementById("recipeTable").getElementsByTagName('tbody')[0].appendChild(newRow);
            }
            // Edit item
            function editRow(button) {
                // Get row of button
                var row = button.closest('tr');
                var cells = row.querySelectorAll('.editable');

                //Setup values in dialog box.
                var dialog = document.querySelector('dialog');

                dialog.showModal();
            }
                    // Cancel edit
        function cancelEdit(span) {
            var dialog = document.getElementById('editDialog');
            dialog.close();
        }
        </script>

    <dialog id="editDialog">
        <form method="post" asp-controller="MealPlanner" asp-action="EditMealPlan">
            @if(Model.UserMealsNames != null && Model.UserMealsNames.Any())
                {
                    <div class="form-group">
                        <div id="meal-container">
                            <table id="mealTable">
                                <thead>
                                    <tr>
                                        <th>Add Meals</th>
                                       @*  <th></th> *@
                                    </tr>
                                </thead>
                                <tbody>
                                @for (int i = 0; i < Model.UserMealsNames.Count; i++)
                                {
                                    <tr>
                                        <td>
                                            <select name="meal.MealNames[@i]" value="@Model.mealPlansForDay.Meals">
                                                <option value="" disabled selected>Select a Meal</option>
                                                @foreach(string mealName in Model.UserMealsNames)
                                                {
                                                    <option value="@mealName">@mealName</option>
                                                }
                                            </select>
                                        </td>
                                        @* <td>
                                            <button type="button" onclick="removeMealRow(this)">Remove</button>
                                        </td> *@
                                    </tr>
                                }
                                </tbody>
                            </table>
                        </div>
                       @*  <div>
                            <span class="plus-button" onclick="addMealRow()">Add Meal</span>
                        </div><br> *@
                    </div>
                }
                else
                {
                    <p>No Meals to Select</p>
                }
                <!--Recipe Selector Table-->
                @if(Model.UserRecipesNames != null && Model.UserRecipesNames.Any())
                {
                    <div class="form-group">
                        <div id="recipe-container">
                            <table id="recipeTable">
                                <thead>
                                    <tr>
                                        <th>Add Recipes</th>
                                        @* <th></th> *@
                                    </tr>
                                </thead>
                                <tbody>
                                @for (int i = 0; i < Model.UserRecipesNames.Count; i++)
                                {
                                    <tr>
                                        <td>
                                                <select name="meal.RecipeNames[@i]" value="@Model.mealPlansForDay.Meals">
                                                <option value="" disabled selected>Select a Recipe</option>
                                                @foreach(string recipeName in Model.UserRecipesNames)
                                                {
                                                    <option value="@recipeName">@recipeName</option>
                                                }
                                            </select>
                                        </td>
                                       @*  <td>
                                            <button type="button" onclick="removeRecipeRow(this)">Remove</button>
                                        </td> *@
                                    </tr>
                                }
                                </tbody>
                            </table>
                        </div>
                        @* <div>
                            <span class="plus-button" onclick="addRecipeRow()">Add Recipe</span>
                        </div><br> *@
                    </div>
                }
                else
                {
                    <p>No Recipes to Select</p>
                }
                <br><button type="submit" class="btn btn-custom">Save Scheduled Meal</button><br>
                               
        </form>
        <span onclick="cancelEdit()">Cancel</span>
    </dialog>
</body>
