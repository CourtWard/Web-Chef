@model RecipeBuilder.ViewModels.RecipeEditVM
@{
    ViewData["Title"] = "Edit Recipe";
}

<style>
    .plus-button {
        background-color: #96AE6D;
        color: white;
        border: none;
        padding: 5px 10px;
        border-radius: 50%;
        cursor: pointer;
        font-size: 18px;
        display: inline-flex;
        justify-content: center;
        align-items: center;
        transition: background-color 0.2s;
        margin-left: 10px;
    }

    .plus-button:hover {
        background-color: #4A743E;
    }

    .ingredient-row, .instruction-row{
        display: flex;
        gap: 10px;
        margin-bottom: 10px;
    }
</style>

<div class="text-center">
    <h2 class="display-4">Edit @Model.recipe.Name</h2>
    <form asp-action="EditRecipe" method="post">
        <div class="form-group">
            <label asp-for="recipe.Name" class="control-label">Recipe Name: @Model.recipe.Name</label>
            <input type="hidden" name="recipe.Name" value="@Model.recipe.Name" readonly/>
        </div>

        <div class="form-group">
            <label asp-for="recipe.Description" class="control-label">Description:</label>
            <textarea asp-for="recipe.Description" class="form-control"></textarea>
            <span asp-validation-for="recipe.Description" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label>Tags (comma-separated):</label>
            <input asp-for="TagsInput" class="form-control" />
            <span asp-validation-for="TagsInput" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label asp-for="recipe.Rating">Rating:</label>
            <input asp-for="recipe.Rating" class="form-control" />
            <span asp-validation-for="recipe.Rating" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label asp-for="recipe.Difficulty">Difficulty:</label>
            <input asp-for="recipe.Difficulty" class="form-control" />
            <span asp-validation-for="recipe.Difficulty" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label asp-for="recipe.numServings">Number of Servings:</label>
            <input asp-for="recipe.numServings" class="form-control" />
            <span asp-validation-for="recipe.numServings" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label>Serving Size (e.g., "cup, 2"):</label>
            <input asp-for="ServingSizeInput" class="form-control" />
            <span asp-validation-for="ServingSizeInput" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label>Tools/Equipment Needed (comma-separated):</label>
            <input asp-for="EquipmentInput" class="form-control" />
            <span asp-validation-for="EquipmentInput" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label>Cook Time:</label>
            <textarea asp-for="recipe.CookTime" class="form-control"></textarea>
            <p>mins</p>
            <br>
        </div>

        <div class="form-group">
            <label>Prep Time:</label>
            <textarea asp-for="recipe.PrepTime" class="form-control"></textarea>
            <p>mins</p>
            <br>
        </div>

        <div class="form-group">

            <table id="ingredientTable">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Quantity</th>
                        <th>Unit</th>
                        <th>Qualifier</th>
                    </tr>
                </thead>
                <tbody>
                    @for (int i = 0; i < Model.IngredientsInput.Count; i++)
                    {
                        <tr>
                            <td>
                                <input type="text" name="IngredientsInput[@i].Name" value="@Model.IngredientsInput[i].Name" />
                            </td>
                            <td>
                                <input type="text" name="IngredientsInput[@i].Quantity" value="@Model.IngredientsInput[i].Quantity" />
                            </td>
                            <td>
                                <input type="text" name="IngredientsInput[@i].Unit" value="@Model.IngredientsInput[i].Unit" />
                            </td>
                            <td>
                                <input type="text" name="IngredientsInput[@i].Qualifier" value="@Model.IngredientsInput[i].Qualifier" />
                            </td>
                            @*
                            <td>
                                <button type="button" onclick="removeIngredientRow(this)">Remove</button>
                            </td>
                            *@
                        </tr>
                    }
                </tbody>
            </table>

            <div>
                <span class="plus-button" onclick="addIngredientRow()">+</span>
            </div><br>
        </div>

        <div class="form-group">
            <div id="instructions-container">
                <table id="instructionTable">
                    <thead>
                    <tr>
                        <th>Instruction</th>
                    </tr>
                    </thead>
                    <tbody>
                        @for (int i = 0; i < @Model.InstructionsInput.Count; i++)
                        {
                            <tr>
                                <td>
                                    <input type="text" name="InstructionsInput[@i]" value="@Model.InstructionsInput[i]" />
                                </td>
                                @*
                                <td>
                                    <button type="button" onclick="removeInstructionRow(this)">Remove</button>
                                </td>
                                *@
                            </tr>
                        }
                    </tbody>
                </table>

            </div>
            <div>
                <span class="plus-button" onclick="addInstructionRow()">+</span>
            </div><br>
        </div>

        <button type="submit" class="btn btn-primary">Save</button>
    </form>
</div>
<script>
    function addIngredientRow(){
        var rowCount = document.querySelectorAll('#ingredientTable tbody tr').length;
        var newRow = document.createElement('tr');

        newRow.innerHTML = `
                <td><input type="text" name="IngredientsInput[${rowCount}].Name" /></td>
                <td><input type="text" name="IngredientsInput[${rowCount}].Quantity" /></td>
                <td><input type="text" name="IngredientsInput[${rowCount}].Unit" /></td>
                <td><input type="text" name="IngredientsInput[${rowCount}].Qualifier" /></td>
                <td><button type="button" onclick="removeIngredientRow(this)">Remove</button></td>
            `;
        document.getElementById("ingredientTable").getElementsByTagName('tbody')[0].appendChild(newRow);
    }

    function addInstructionRow(){
        var rowCount = document.querySelectorAll('#instructionTable tbody tr').length;
        var newRow = document.createElement('tr');

        newRow.innerHTML = `
            <td><input type="text" name="InstructionsInput[${rowCount}]" /></td>
            <td><button type="button" onclick="removeInstructionRow(this)">Remove</button></td>
        `;
        document.getElementById("instructionTable").getElementsByTagName('tbody')[0].appendChild(newRow);
    }
</script>
