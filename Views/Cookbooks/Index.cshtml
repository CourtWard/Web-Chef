@model RecipeBuilder.ViewModels.CookbooksIndexVM

@{
    ViewData["Title"] = "My Cookbooks";
}

<style>
    /* styling for title */
    h1 {
        color: #4A743E;
    }

    /* button styling */
    .btn-custom, .btn-custom-remove, .btn-search {
        display: inline-block; /* Ensures button width is based on content */
        padding: 10px 20px;
        font-size: 16px;
        color: white;
        text-align: center;
        text-decoration: none;
        border-radius: 5px;
        border: none;
        transition: background-color 0.3s ease;
    }

    .btn-custom {
        background-color: #4A743E;
    }

    .btn-custom-remove {
        background-color: #c30010;
    }

    .btn-search {
        background-color: #4A743E;
        color: white;
    }

    .btn-custom:hover {
        background-color: #96AE6D;
    }

    .btn-custom-remove:hover {
        background-color: #f94449;
    }

    .btn-search:hover {
        background-color: #96AE6D;
    }

    /* align buttons side by side */
    .input-group .btn {
        margin-left: 10px;
    }

    /* block styling for cookbook elements */
    .block {
        display: flex;
        flex-wrap: wrap;
        gap: 10px;
        margin-top: 20px;
        justify-content: center;
        background-color: #F5F5F5;
        border-radius: 5px;
        width: 100%;
        max-width: 300px;
        padding: 10px;
        text-align: center;
    }

    /* button-container for buttons to appear side by side */
    .button-container {
        display: flex; /* Aligns the buttons in a row */
        gap: 10px; /* Adds space between buttons */
        justify-content: center; /* Centers the buttons */
        margin-top: 10px;
    }

    .button-container a, .button-container button {
        width: auto; /* Ensures buttons only take up space based on their content */
    }
</style>

<div class="d-flex justify-content-between align-items-center mb-3">
    <div class="d-flex">
        @* <div class="input-group input-group-sm">
            <input type="text" class="form-control" placeholder="Search by Tags..." name="TagSearch" value="@ViewData["CurrentTagFilter"]" style="max-width: 150px;" />
            <div class="input-group-append">
                <button class="btn btn-search" type="submit">Search</button>
            </div>
        </div> *@
    </div>
    <h1 class="text-center flex-grow-1 display-4" style="margin: 0; color: #4A743E;">Cookbooks</h1>
    <hr class="rounded">
    <a asp-controller="Cookbooks" asp-action="Add" class="btn btn-custom d-flex">Create New Cookbook</a>
</div>

@* <div class="text-center">
    <div class="form-group">
        <input type="text" class="form-control" placeholder="Search Recipes..." name="searchTerm" value="@ViewData["CurrentFilter"]" />
    </div><br>
    <button type="submit" class="btn btn-search ml-2">Search</button>
</div><br> *@

<div class="row">
    @if (Model.cookbooks != null && Model.cookbooks.Any())
    {
        @foreach (var cookbook in Model.cookbooks)
        {
            <div class="col-md-4">
                <div class="block">
                    <h4 style="color: #4A743E;">@cookbook.Title</h4>
                    <!-- Buttons aligned side by side -->
                    <div class="button-container">
                        <a asp-action="Cookbook" asp-route-name="@cookbook.Title" class="btn btn-custom">View</a>
                        <form method="post" asp-controller="Cookbooks" asp-action="RemoveCookbook">
                            <input type="hidden" name="cookbookToRemove" value="@cookbook.Title"/>
                            <button type="submit" class="btn-custom-remove">Remove Cookbook</button>
                        </form>
                    </div>
                </div>
            </div>
        }
    }
    else
    {
        <p>No Recipes Found.</p>
    }
</div>
