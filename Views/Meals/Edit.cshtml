@model RecipeBuilder.ViewModels.MealsEditVM

@{
    ViewData["Title"] = "Edit Meal";
}

<div class="text-center">
    <h2 class="display-4">Edit Meal</h2>
</div>
<form asp-controller="Meals" asp-action="Edit" method="post">
    <div class="form-group">
        <label for="MealName">Meal Name: @Model.mealData.Name</label>
        <input type="hidden" name="mealData.Name" value="@Model.mealData.Name"/>
    </div>

    <div class="form-group">
        <label for="Description">Description:</label>
        <textarea class="form-control" id="MealDescription" asp-for="@Model.mealData.Description"></textarea><br>
    </div>

    <div>
        <label for="AddedRecipes">Current Recipes:</label>
    </div>
    @if (Model.mealData.RecipeNames != null && Model.mealData.RecipeNames.Any())
    {
        @foreach (var recipe in Model.mealData.RecipeNames)
        {
            <p>@recipe</p>
        }
    }

    @if(Model.UserRecipesNames != null && Model.UserRecipesNames.Any())
    {
        <div class="form-group">
            <div id="recipe-container">
                <table id="recipeTable">
                    <thead>
                        <tr>
                            <th>Recipes</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @for (int i = 0; i < Model.UserRecipesNames.Count; i++)
                        {
                            <tr>
                                <td>
                                    <select name="RecipesToAdd[@i]" value="@Model.mealData.RecipeNames">
                                    @if(Model.mealData.RecipeNames.Count > i && Model.mealData.RecipeNames[i] != "") {
                                        <option value="">None</option>
                                        <option value="@Model.mealData.RecipeNames[@i]" selected>@Model.mealData.RecipeNames[@i]</option>
                                        } else {
                                        <option value="" selected>None</option>
                                        }
                                        @foreach(string recipeName in Model.UserRecipesNames)
                                        {
                                            <option value="@recipeName">@recipeName</option>
                                        }
                                    </select>
                                </td>
                               @*
                                <td>
                                    <button type="button" onclick="removeRecipeRow(this)">Remove Selection</button>
                                </td>
                                *@
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <div>
                <span class="plus-button" onclick="addRecipeRow()">+</span>
            </div><br>
        </div>
        }
        else
        {
            <p>No Recipes to Select</p>
        }
    <button type="submit" class="btn btn-success">Save Meal</button>
</form>
<script>
    function addRecipeRow(){
        var rowCount = document.querySelectorAll('#recipeTable tbody tr').length;
        var initialDropdown = document.querySelector('#recipeTable tbody tr').outerHTML;
        var newRow = document.createElement('tr');

        newRow.innerHTML = initialDropdown;

        // Update the 'name' attribute in the new row's dropdown to reflect the current index
        var selectElement = newRow.querySelector('select');
        selectElement.setAttribute('name', `newcookbook.RecipeNames[${rowCount}]`);

        document.getElementById("recipeTable").getElementsByTagName('tbody')[0].appendChild(newRow);
    }

    function removeRecipeRow(button)
    {

    }
</script>
