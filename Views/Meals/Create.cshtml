@model RecipeBuilder.ViewModels.MealsCreateVM

@{
    ViewData["Title"] = "Create Meal";
}

<style>

    h1 {
        color: #4A743E;
        text-align: center;
    }

    hr.rounded {
        border-top: 8px solid #96AE6D;
        border-radius: 5px;
    }

    input[type="text"] {
        width: 100%;
        padding: 8px;
        margin: 8px 0;
        box-sizing: border-box;
        border: 2px solid #96AE6D;
        border-radius: 4px;
    }

    .add-recipes {
        background-color: #96AE6D;
        color: white;
        padding: 10px 20px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        font-size: 16px;
        text-decoration: none;
        display: inline-block;
    }

    .add-recipes:hover {
        background-color: #4A743E;
    }

    .recipes-section {
        display: flex;
        align-items: flex-start;
        margin-top: 10px;
    }

    /* styling the recipes list box */
    .recipes-list {
        background-color: #E9E9E9;
        padding: 20px;
        border-radius: 10px;
        margin-left: 20px;
        flex-grow: 1;
    }

    .recipes-list ul {
        list-style-type: disc; /* bulleted list */
        padding-left: 20px;
        margin: 0;
    }

    .recipes-list a {
        color: #4A743E;
        text-decoration: none;
        font-weight: normal; 
    }

    .recipes-list a:hover {
        text-decoration: underline;
    }

    .recipes-added-label {
        margin-top: 10px; 
        font-weight: normal; 
    }

    /* button is aligned at the same height as label */
    .add-recipes {
        margin-top: 20px; 
    }

</style>

<h1 class="display-4" style="color: #4A743E;">Create Meal</h1>
<hr class="rounded">
<body>
    <form asp-controller="Meals" asp-action="Create" method="post" id="form">
    <!-- meal name -->
    <div>
        <label for="mealname">Name:</label>
        <input type="text" class="form-control" id="mealName" asp-for="@Model.meal.Name" required /><br>
        <span asp-validation-for="@Model.meal.Name" class="text-danger"></span>
    </div>

    <!-- meal description -->
    <div>
        <label for="mealDescription">Description:</label>
        <input type="text" class="form-control" id="mealDescription" asp-for="@Model.meal.Description" required /><br>
        <span asp-validation-for="@Model.meal.Description" class="text-danger"></span>
    </div>

    <!-- recipes added label -->
    <div>
        <label for="recipes" class="recipes-added-label">Recipes Added:</label>
    </div>
    @if(Model.UserRecipesNames != null && Model.UserRecipesNames.Any())
    {
        <div class="form-group">
            <div id="recipe-container">
                <table id="recipeTable">
                    <thead>
                        <tr>
                            <th>Recipes</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                    @for (int i = 0; i < Model.UserRecipesNames.Count; i++)
                    {
                        <tr>
                            <td>
                                <select name="meal.RecipeNames[@i]" value="@Model.meal.Recipes">
                                    <option value="" disabled selected>Select a Recipe</option>
                                    @foreach(string recipeName in Model.UserRecipesNames)
                                    {
                                        <option value="@recipeName">@recipeName</option>
                                    }
                                </select>
                            </td>
                            <td>
                                <button type="button" onclick="removeRecipeRow(this)">Remove</button>
                            </td>
                        </tr>
                    }
                    </tbody>
                </table>
            </div>
            <div>
                <span class="plus-button" onclick="addRecipeRow()">+</span>
            </div><br>
        </div>
    }
    else
    {
        <p>No Recipes to Select</p>
    }

        @if (Model != null)
        {
            @if (Model.msg != "")
            {
            <div>
            <p>@Model.msg</p>
            </div>
            }
        }


    <br><button type="submit" class="btn btn-custom">Save Meal</button><br>
    <br>
    </form>
</body>
<script>
    function addRecipeRow(){
        var rowCount = document.querySelectorAll('#recipeTable tbody tr').length;
        var initialDropdown = document.querySelector('#recipeTable tbody tr').outerHTML;
        var newRow = document.createElement('tr');

        newRow.innerHTML = initialDropdown;

        // Update the 'name' attribute in the new row's dropdown to reflect the current index
        var selectElement = newRow.querySelector('select');
        selectElement.setAttribute('name', `meal.RecipeNames[${rowCount}]`);

        document.getElementById("recipeTable").getElementsByTagName('tbody')[0].appendChild(newRow);
    }
</script>
