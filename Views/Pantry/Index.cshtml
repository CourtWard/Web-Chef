@model RecipeBuilder.ViewModels.PantryIndexVM

@{
    ViewData["Title"] = "Pantry";
}

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Pantry</title>

    <style>
        #pantryContainer {
            background-color: #F4F3EC;
            padding: 20px;
            border-radius: 10px;
            max-width: 900px;
            margin: auto;
        }

        .text-center h1 {
            color: #4A743E;
        }

        #pantryContainer ul {
            list-style-type: disc;
            padding-left: 20px;
            color: #4A743E;
        }

        #pantryContainer ul li {
            margin: 10px 0;
        }

        #pantryContainer form {
            display: inline; /* Keep the form inline with the text */
        }

        #pantryContainer a, #pantryContainer button {
            margin-left: 10px;
            text-decoration: none;
            color: #96AE6D;
            border: none;
            background: none;
            cursor: pointer;
        }

        #pantryContainer a:hover, #pantryContainer button:hover {
            text-decoration: underline;
        }

        .alphabet {
            display: flex;
            justify-content: center;
            margin: 20px 0;
        }

        .alphabet a {
            margin: 0 10px;
            text-decoration: none;
            color: #4A743E;
            font-weight: bold;
            transition: color 0.3s;
        }

        .alphabet a:hover {
            color: #96AE6D;
        }

        .smallInput {
            width: 80px;
        }
    </style>
    <script>
        // remove an item from the pantry list (client-side only)
        function removeItem(event) {
            const item = event.target.closest('li'); // get closest list item
            if (item) {
                item.remove(); // remove item from the DOM
            }
        }

        function scrollToIngredient() {
            const searchInput = document.getElementById('ingredientSearch').value.toLowerCase();
            const items = document.querySelectorAll('.ingredients-list li a');

            items.forEach(item => {
                if (item.textContent.toLowerCase().includes(searchInput)) {
                    const ingredientSection = item.closest('ul').previousElementSibling; // get following header (h2)
                    ingredientSection.scrollIntoView({ behavior: 'smooth' });
                    return; // exit loop
                }
            });
        }

        // Edit item 
        function editRow(button)
        {
            // Get row of button
            var row = button.closest('tr');
            var cells = row.querySelectorAll('.editable');
            //cells[0].innerHTML = `<input type="text" name="name" value="${cells[0].textContent}" readonly/>`;
            //cells[1].innerHTML = `<input type="text" name="quantity" value="${cells[1].textContent}" />`;
            //cells[2].innerHTML = `<input type="text" name="unit" value="${cells[2].textContent}" />`;
            //cells[3].innerHTML = `<input type="text" name="qualifier" value="${cells[3].textContent}" />`;
            //var subButton = row.querySelector('.edit-form').querySelector('button[type="submit"]');
            //if (subButton) {
            //subButton.removeAttribute('hidden');
            //}

            //Setup values in dialog box.
            var dialog = document.querySelector('dialog');
            document.getElementById('editName').value = cells[0].textContent;
            document.getElementById('editQuantity').value = cells[1].textContent;
            document.getElementById('editUnit').value = cells[2].textContent;
            document.getElementById('editQualifier').value = cells[3].textContent;

            dialog.showModal();

            //button.textContent = 'Cancel';
            //button.setAttribute('onclick', 'cancelEdit(this)');
        }

        // Cancel edit
        function cancelEdit(span)
        {
            //var row = button.closest('tr');
            //var cells = row.querySelectorAll('input[type="text"]');
            //cells[0].innerHTML = `<input type="text" name="name" value="${cells[0].textContent}" readonly/>`;
            //cells[1].innerHTML = `<input type="text" name="quantity" value="${cells[1].textContent}" />`;
            //cells[2].innerHTML = `<input type="text" name="unit" value="${cells[2].textContent}" />`;
            //cells[3].innerHTML = `<input type="text" name="qualifier" value="${cells[3].textContent}" />`;
            //var subbutton = row.querySelector('.edit-form').querySelector('button[type="submit"]');
            //if(subbutton){
            //subbutton.setAttribute('hidden', 'hidden');
           //}
           //button.textContent = 'Edit';
           //button.setAttribute('onclick', 'editRow(this)');
           var dialog = document.getElementById('editDialog');
           dialog.close();
        }
    </script>
</head>

<body>
    <!-- Page Heading -->
    <div class="text-center">
        <h1 class="display-4">Pantry</h1>
        <br>
    </div>

    <!-- Add to pantry 'form' -->
    <div id="pantryContainer" class="table-responsive">
        <form asp-action="AddItemToPantry" method="post">
            <table class="table">
                <thead>
                    <tr>
                        <th>Item Name</th>
                        <th>Amount</th>
                        <th>Unit</th>
                        <th>Description</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td><input type="text" name="newIngredient.Name" required /></td>
                        <td><input class="smallInput" type="text" name="newIngredient.Quantity" /></td>
                        <td><input class="smallInput" type="text" name="newIngredient.Unit" /></td>
                        <td><input type="text" name="newIngredient.Qualifier" /></td>
                        <td><button type="submit" class="btn btn-custom">Add Item</button></td>
                    </tr>

                </tbody>
            </table>
        </form>
    </div>

    <br />

    <!-- View current pantry items -->
    <div id="pantryContainer">
        <!-- Search Bar -->
        <div class="text-center">
            <div class="search-container">
                <input type="text" id="ingredientSearch" placeholder="Search" oninput="scrollToIngredient()">
            </div>
        </div>

        <!-- ABC Nav Bar -->
        <div class="alphabet">
            @foreach (var letter in @Model.ABCPantry.Keys)
            {
                <a href="#@letter">@letter</a>
            }
        </div>

        <!-- Current Pantry Items -->
        <div class="table-responsive">
             @foreach (var ABCList in @Model.ABCPantry)
            {
                <h2 id="@ABCList.Key">@ABCList.Key</h2>
                <table class="table">
                    <thead>
                        <tr>
                            <th>Item Name</th>
                            <th>Amount</th>
                            <th>Unit</th>
                            <th>Description</th>
                            <th></th>
                            <th></th>
                                <th></th>
                        </tr>
                    </thead>
                @foreach (var item in ABCList.Value)
                {
                    <tbody>
                        <tr>
                                <td class="editable"><a href="/Recipe/Index/@item.Name">@item.Name</a></td>
                                <td class="editable">@item.Quantity</td>
                                <td class="editable">@item.Unit</td>
                                <td class="editable">@item.Qualifier</td>
                                <td><button type="submit" class="btn btn-custom" hidden="hidden">Submit</button></td>
                            <td><button onclick="editRow(this)" class="btn btn-custom">Edit</button></td>
                            <form method="post" asp-controller="Pantry" asp-action="RemoveFromPantry">
                                <input type="hidden" name="ingredientName" value="@item.Name"/>
                                <td><button type="submit" class="btn btn-custom">Delete</button></td>
                            </form>
                        </tr>
                    </tbody>
                }
                </table>
            }
        </div>
    </div>

    <dialog id="editDialog">
        <p>Enter New Properties</p>
        <form method="post" asp-controller="Pantry" asp-action="EditPantryItem">
            <input id="editName" type="text" name="name" value="" readonly/>
            <input id="editQuantity" type="text" name="quantity" value="" />
            <input id="editUnit" type="text" name="unit" value="" />
            <input id="editQualifier" type="text" name="qualifier" value="" />
            <button type="submit">Submit</button>
        </form>
        <span onclick="cancelEdit()">Cancel</span>
    </dialog>
</body>
