@model RecipeBuilder.ViewModels.PantryIndexVM

@{
    ViewData["Title"] = "Pantry";
}

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Pantry</title>

    <style>
        #pantryContainer {
            background-color: #F4F3EC; 
            padding: 20px;
            border-radius: 10px;
            max-width: 900px;
            margin: auto; 
        }

        .text-center h1 {
            color: #4A743E;
        }

        #pantryContainer ul {
            list-style-type: disc; 
            padding-left: 20px; 
            color: #4A743E; 
        }

        #pantryContainer ul li {
            margin: 10px 0; 
        }

        #pantryContainer form {
            display: inline; /* Keep the form inline with the text */
        }

        #pantryContainer a, #pantryContainer button {
            margin-left: 10px;
            text-decoration: none; 
            color: #96AE6D;
            border: none;
            background: none;
            cursor: pointer;
        }

        #pantryContainer a:hover, #pantryContainer button:hover {
            text-decoration: underline;
        }

                .alphabet {
            display: flex; 
            justify-content: center;
            margin: 20px 0; 
        }

        .alphabet a {
            margin: 0 10px; 
            text-decoration: none; 
            color: #4A743E; 
            font-weight: bold; 
            transition: color 0.3s; 
        }

        .alphabet a:hover {
            color: #96AE6D; 
        }
    </style>
    <script>
        // remove an item from the pantry list (client-side only)
        function removeItem(event) {
            const item = event.target.closest('li'); // get closest list item
            if (item) {
                item.remove(); // remove item from the DOM
            }
        }

        function scrollToIngredient() {
            const searchInput = document.getElementById('ingredientSearch').value.toLowerCase();
            const items = document.querySelectorAll('.ingredients-list li a');

            items.forEach(item => {
                if (item.textContent.toLowerCase().includes(searchInput)) {
                    const ingredientSection = item.closest('ul').previousElementSibling; // get following header (h2)
                    ingredientSection.scrollIntoView({ behavior: 'smooth' });
                    return; // exit loop
                }
            });
        }

        function editRow(button)
        {
            // Get row of button
            var row = button.closest('tr');

            // Change each cell to a textbox
            var cells = row.querySelectorAll('.editable');
            cells.forEach(function(cell)
            {
                var currentText = cell.textContent;
                cell.innerHTML = `<input type="text" value="${currentText}" />`;
            });

            button.textContent = 'Save';
            button.setAttribute('onclick', 'saveRow(this)');
        }

        function saveRow(button)
        {
             // Get row of button
            var row = button.closest('tr');

            // Change each cell to a textbox
            var cells = row.querySelectorAll('.editable');
            cells.forEach(function(cell)
            {
                var inputField = cell.querySelector('input');
                if (inputField)
                { cell.textContent = inputField.value; }
            });

            button.textContent = 'Edit';
            button.setAttribute('onclick', 'editRow(this)');
        }
    </script>
</head>

<body>
    <div class="text-center">
        <h1 class="display-4">Pantry</h1>
        <br>
    </div>

    <!-- Add to pantry 'form' -->
    <div id="pantryContainer" >
        <form asp-action="AddItemToPantry" method="post">
            <table>
                <thead>
                    <tr>
                        <th>Item Name</th>
                        <th>Amount</th>
                        <th>Unit</th>
                        <th>Description</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td><input type="text" name="IngredientsInput[${rowCount}].Name" /></td>
                        <td><input type="text" name="IngredientsInput[${rowCount}].Quantity" /></td>
                        <td><input type="text" name="IngredientsInput[${rowCount}].Unit" /></td>
                        <td><input type="text" name="IngredientsInput[${rowCount}].Qualifier" /></td>
                        <td><button type="submit" class="btn btn-custom">Add Item</button></td>
                    </tr>
                    
                </tbody>
            </table>
        </form>
    </div>

    <br>

    <!-- View current pantry items -->
    <div id="pantryContainer">
        @* <br> *@
        <!-- Search Bar -->
        <div class="text-center">
            <div class="search-container">
                <input type="text" id="ingredientSearch" placeholder="Search" oninput="scrollToIngredient()">
            </div>
        </div>

        <!-- ABC Nav Bar -->
        <div class="alphabet">
            @foreach (var letter in @Model.ABCPantry.Keys)
            {
                <a href="#@letter">@letter</a>
            }
        </div>

        <!-- Current Pantry Items -->
        <div>
             @foreach (var ABCList in @Model.ABCPantry)
            {
                <h2>@ABCList.Key</h2>
                <table>
                    <thead>
                        <tr>
                            <th>Item Name</th>
                            <th>Amount</th>
                            <th>Unit</th>
                            <th>Description</th>
                            <th></th>
                        </tr>
                    </thead>
                @foreach (var item in ABCList.Value)
                {
                    
                    <tbody>
                        <tr>
                            <td class="editable">@item.Name</td>
                            <td class="editable">@item.Quantity</td>
                            <td class="editable">@item.Unit</td>
                            <td class="editable">@item.Qualifier</td>
                            <td><button onclick="editRow(this)" class="btn btn-custom">Edit</button></td>
                            <td><button type="submit" class="btn btn-custom">Delete</button></td>
                        </tr>
                    </tbody>   
                }
                </table>
            }
        </div>

                @* <li>
                    @item.Name

                    <!-- Form to add item to the shopping list -->
                    <form asp-controller="Pantry" asp-action="AddItemToShoppingList" method="post">
                        <input type="hidden" name="itemName" value="@item.Name" />
                        <button type="submit">Add Item To Shopping List</button>
                    </form>

                    <!-- Client-side remove functionality -->
                    <a href="#" onclick="removeItem(event)">Remove</a>
                </li>
            }
        </ul> *@
    </div>
</body>
</html>

@* Use when implementing edit js *@
@* <tr>
                        <td><input type="text" name="IngredientsInput[${rowCount}].Name" value=@item.Name /></td>
                        <td><input type="text" name="IngredientsInput[${rowCount}].Quantity" value=@item.Quantity /></td>
                        <td><input type="text" name="IngredientsInput[${rowCount}].Unit" value=@item.Unit /></td>
                        <td><input type="text" name="IngredientsInput[${rowCount}].Qualifier" value=@item.Qualifier /></td>
                        <td><button type="submit" class="btn btn-custom">Update Item Item</button></td>
                    </tr> *@